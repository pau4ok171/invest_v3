services:

  db:
    image: postgres:latest
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: ["uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
    restart: always
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.25.3
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates/:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - .:/code
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    depends_on:
      - nginx

  rabbitmq:
    image: rabbitmq:3.9.29-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    env_file:
      - ./.env
    ports:
      - 15672:15672
      - 5672:5672

  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - db
      - web
      - rabbitmq

  celery-beat:
    build: .
    command: celery -A config beat -l info
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - celery

  celery-flower:
    build: .
    command: celery -A config flower
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - celery